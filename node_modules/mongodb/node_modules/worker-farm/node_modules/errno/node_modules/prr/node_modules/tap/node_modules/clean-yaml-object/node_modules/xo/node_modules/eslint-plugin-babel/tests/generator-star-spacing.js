/* eslint-disable */
var rule = require('../rules/generator-star-spacing'),
    RuleTester = require('eslint').RuleTester;

var features = {
    generators: true
};

function ok(code, args){
  return { code: code, options: args,  parser: 'babel-eslint', ecmaFeatures: features }
}

function err(code, errors, args){
  var e = ok(code, args)
  e.errors = errors
  return e
}

var ruleTester = new RuleTester();
ruleTester.run('babel/generator-star-spacing', rule, {
  valid: [
      // Default ("before")
      {
          code: "function foo(){}"
      },
      {
          code: "function *foo(){}",
          ecmaFeatures: { generators: true }
      },
      {
          code: "function *foo(arg1, arg2){}",
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function *foo(){};",
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function *(){};",
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function * (){};",
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = { *foo(){} };",
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "var foo = {*foo(){} };",
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "class Foo { *foo(){} }",
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo {*foo(){} }",
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo { static *foo(){} }",
          ecmaFeatures: { classes: true, generators: true }
      },

      // "before"
      {
          code: "function foo(){}",
          options: ["before"]
      },
      {
          code: "function *foo(){}",
          options: ["before"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "function *foo(arg1, arg2){}",
          options: ["before"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function *foo(){};",
          options: ["before"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function *(){};",
          options: ["before"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function * (){};",
          options: ["before"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = { *foo(){} };",
          options: ["before"],
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "var foo = {*foo(){} };",
          options: ["before"],
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "class Foo { *foo(){} }",
          options: ["before"],
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo {*foo(){} }",
          options: ["before"],
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo { static *foo(){} }",
          options: ["before"],
          ecmaFeatures: { classes: true, generators: true }
      },

      // "after"
      {
          code: "function foo(){}",
          options: ["after"]
      },
      {
          code: "function* foo(){}",
          options: ["after"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "function* foo(arg1, arg2){}",
          options: ["after"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function* foo(){};",
          options: ["after"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function* (){};",
          options: ["after"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function*(){};",
          options: ["after"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = {* foo(){} };",
          options: ["after"],
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "var foo = { * foo(){} };",
          options: ["after"],
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "class Foo {* foo(){} }",
          options: ["after"],
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo { * foo(){} }",
          options: ["after"],
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo { static* foo(){} }",
          options: ["after"],
          ecmaFeatures: { classes: true, generators: true }
      },

      // "both"
      {
          code: "function foo(){}",
          options: ["both"]
      },
      {
          code: "function * foo(){}",
          options: ["both"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "function * foo(arg1, arg2){}",
          options: ["both"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function * foo(){};",
          options: ["both"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function * (){};",
          options: ["both"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function *(){};",
          options: ["both"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = { * foo(){} };",
          options: ["both"],
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "var foo = {* foo(){} };",
          options: ["both"],
          ecmaFeatures: { generators: true, objectLiteralShorthandMethods: true }
      },
      {
          code: "class Foo { * foo(){} }",
          options: ["both"],
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo {* foo(){} }",
          options: ["both"],
          ecmaFeatures: { classes: true, generators: true }
      },
      {
          code: "class Foo { static * foo(){} }",
          options: ["both"],
          ecmaFeatures: { classes: true, generators: true }
      },

      // "neither"
      {
          code: "function foo(){}",
          options: ["neither"]
      },
      {
          code: "function*foo(){}",
          options: ["neither"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "function*foo(arg1, arg2){}",
          options: ["neither"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function*foo(){};",
          options: ["neither"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function*(){};",
          options: ["neither"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = function* (){};",
          options: ["neither"],
          ecmaFeatures: { generators: true }
      },
      {
          code: "var foo = {*foo(){} };",
          options: ["neither"],
          ecmaFeatures: { generators: true, objectLiteral