'use strict';


/**
 * Error codes from libuv.
 * @enum {number}
 */
var codes = {
  UNKNOWN: {
    errno: -1,
    message: 'unknown error'
  },
  OK: {
    errno: 0,
    message: 'success'
  },
  EOF: {
    errno: 1,
    message: 'end of file'
  },
  EADDRINFO: {
    errno: 2,
    message: 'getaddrinfo error'
  },
  EACCES: {
    errno: 3,
    message: 'permission denied'
  },
  EAGAIN: {
    errno: 4,
    message: 'resource temporarily unavailable'
  },
  EADDRINUSE: {
    errno: 5,
    message: 'address already in use'
  },
  EADDRNOTAVAIL: {
    errno: 6,
    message: 'address not available'
  },
  EAFNOSUPPORT: {
    errno: 7,
    message: 'address family not supported'
  },
  EALREADY: {
    errno: 8,
    message: 'connection already in progress'
  },
  EBADF: {
    errno: 9,
    message: 'bad file descriptor'
  },
  EBUSY: {
    errno: 10,
    message: 'resource busy or locked'
  },
  ECONNABORTED: {
    errno: 11,
    message: 'software caused connection abort'
  },
  ECONNREFUSED: {
    errno: 12,
    message: 'connection refused'
  },
  ECONNRESET: {
    errno: 13,
    message: 'connection reset by peer'
  },
  EDESTADDRREQ: {
    errno: 14,
    message: 'destination address required'
  },
  EFAULT: {
    errno: 15,
    message: 'bad address in system call argument'
  },
  EHOSTUNREACH: {
    errno: 16,
    message: 'host is unreachable'
  },
  EINTR: {
    errno: 17,
    message: 'interrupted system call'
  },
  EINVAL: {
    errno: 18,
    message: 'invalid argument'
  },
  EISCONN: {
    errno: 19,
    message: 'socket is already connected'
  },
  EMFILE: {
    errno: 20,
    message: 'too many open files'
  },
  EMSGSIZE: {
    errno: 21,
    message: 'message too long'
  },
  ENETDOWN: {
    errno: 22,
    message: 'network is down'
  },
  ENETUNREACH: {
    errno: 23,
    message: 'network is unreachable'
  },
  ENFILE: {
    errno: 24,
    message: 'file table overflow'
  },
  ENOBUFS: {
    errno: 25,
    message: 'no buffer space available'
  },
  ENOMEM: {
    errno: 26,
    message: 'not enou